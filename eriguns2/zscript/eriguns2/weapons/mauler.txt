/*
 * eriguns2: mauler
 * (c) xaser 2017
 * sprites (c) Amuscaria
 */

class EriMauler : HellWeapon
{
	Default
	{
		Scale 0.8;
		Weapon.SelectionOrder 400;
		Weapon.AmmoUse 8;
		Weapon.AmmoGive 20;
		Weapon.AmmoType "NailAmmo";
		Weapon.SisterWeapon "EriMaulerPowered";
		Inventory.PickupMessage "$GOTMAULER";
		Tag "$TAG_MAULER";
	}
	States
	{
	Ready:
		HMAG A 1 A_WeaponReady();
		Loop;
	Deselect:
		HMAG A 1 A_Lower();
		Loop;
	Select:
		HMAG A 1 A_Raise();
		Loop;
	Fire:
		HMAF A 3 Bright A_GunFlash();
		HMAF B 3 Bright X_FireMauler();
		HMAF C 3 Bright;
		HMAF D 3;
		HMAF E 3 A_PlaySound("weapons/maulersteam", CHAN_AUTO);
		HMAF FGHI 3;
		HMAG A 7;
		Goto Ready;
	Flash:
		TNT1 A 3 Bright A_Light(1);
		TNT1 A 3 Bright A_Light(2);
		TNT1 A 3 Bright A_Light(1);
		Goto LightDone;
	Spawn:
		HEMA A -1;
		Stop;
	}

	action void X_FireMauler()
	{
		// fuck math
		A_PlaySound("weapons/maulerfire", CHAN_WEAPON);
		A_PlaySound("weapons/maulerfire1", CHAN_AUTO);
		A_FireProjectile( "MicroNail", frandom( -8.0,-4.0), 0,-4.5, 3, 1, frandom( 0.0, 2.0) );
		A_FireProjectile( "MicroNail", frandom( -4.0, 0.0), 0,-1.5, 3, 1, frandom( 0.0, 2.0) );
		A_FireProjectile( "MicroNail", frandom(  0.0, 4.0), 0, 1.5, 3, 1, frandom( 0.0, 2.0) );
		A_FireProjectile( "MicroNail", frandom(  4.0, 8.0), 0, 4.5, 3, 1, frandom( 0.0, 2.0) );
		A_FireProjectile("MaulerNail", frandom(-12.0,-6.0), 0,-6.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerNail", frandom( -6.0,-2.0), 0,-3.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerNail", frandom( -2.0, 2.0), 0, 0.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerNail", frandom(  2.0, 6.0), 0, 3.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerNail", frandom(  6.0,12.0), 0, 6.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile( "MicroNail", frandom( -8.0,-4.0), 0,-4.5,-3, 1, frandom(-2.0, 0.0) );
		A_FireProjectile( "MicroNail", frandom( -4.0, 0.0), 0,-1.5,-3, 1, frandom(-2.0, 0.0) );
		A_FireProjectile( "MicroNail", frandom(  0.0, 4.0), 0, 1.5,-3, 1, frandom(-2.0, 0.0) );
		A_FireProjectile( "MicroNail", frandom(  4.0, 8.0), 1, 4.5,-3, 1, frandom(-2.0, 0.0) );
	}
}

class EriMaulerPowered : EriMauler
{
	Default
	{
		Weapon.SisterWeapon "EriMauler";
		+WEAPON.POWERED_UP;
	}
	States
	{
	Fire:
		HMAF J 3 Bright A_GunFlash();
		HMAF K 3 Bright X_FireMaulerPow();
		HMAF L 3 Bright;
		HMAF M 3;
		HMAF N 3 A_PlaySound("weapons/maulersteam", CHAN_AUTO);
		HMAF OGHI 3;
		HMAG A 4;
		Goto Ready;
	}

	action void X_FireMaulerPow()
	{
		// muck fath
		A_PlaySound("weapons/maulerfire", CHAN_WEAPON);
		A_PlaySound("weapons/maulerpowfire", CHAN_AUTO);
		A_FireProjectile("MaulerPowBomb", frandom( -8.0,-4.0), 0,-4.5, 3, 1, frandom( 0.0, 2.0) );
		A_FireProjectile("MaulerPowBomb", frandom( -4.0, 0.0), 0,-1.5, 3, 1, frandom( 0.0, 2.0) );
		A_FireProjectile("MaulerPowBomb", frandom(  0.0, 4.0), 0, 1.5, 3, 1, frandom( 0.0, 2.0) );
		A_FireProjectile("MaulerPowBomb", frandom(  4.0, 8.0), 0, 4.5, 3, 1, frandom( 0.0, 2.0) );
		A_FireProjectile("MaulerPowBomb", frandom(-12.0,-6.0), 0,-6.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerPowBomb", frandom( -6.0,-2.0), 0,-3.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerPowBomb", frandom( -2.0, 2.0), 0, 0.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerPowBomb", frandom(  2.0, 6.0), 0, 3.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerPowBomb", frandom(  6.0,12.0), 0, 6.0, 0, 1, frandom(-0.5, 0.5) );
		A_FireProjectile("MaulerPowBomb", frandom( -8.0,-4.0), 0,-4.5,-3, 1, frandom(-2.0, 0.0) );
		A_FireProjectile("MaulerPowBomb", frandom( -4.0, 0.0), 0,-1.5,-3, 1, frandom(-2.0, 0.0) );
		A_FireProjectile("MaulerPowBomb", frandom(  0.0, 4.0), 0, 1.5,-3, 1, frandom(-2.0, 0.0) );
		A_FireProjectile("MaulerPowBomb", frandom(  4.0, 8.0), 1, 4.5,-3, 1, frandom(-2.0, 0.0) );
	}
}

class EriMaulerMana : EriMauler replaces MageWeaponPiece
{
	Default
	{
		Weapon.AmmoGive 25;
		Weapon.AmmoUse 4;
		Weapon.AmmoType "Mana2";
		Weapon.SisterWeapon "EriMaulerManaPowered";
	}
}

class EriMaulerManaPowered : EriMaulerPowered
{
	Default
	{
		Weapon.AmmoUse 4;
		Weapon.AmmoType "Mana2";
		Weapon.SisterWeapon "EriMaulerMana";
		+WEAPON.POWERED_UP;
	}
}

class EriMaulerManaSpawner : ActorSpawner
{
	Default
	{
		ActorSpawner.SpawnClass "EriMaulerMana";
	}
}

class EriMaulerHexen0 : EriMaulerManaSpawner replaces BloodscourgeDrop  {}
class EriMaulerHexen1 : EriMaulerManaSpawner replaces MWeaponPiece1     {}
class EriMaulerHexen2 : EriMaulerManaSpawner replaces MWeaponPiece2     {}
class EriMaulerHexen3 : EriMaulerManaSpawner replaces MWeaponPiece3     {}
class EriMaulerHexen4 : EriMaulerManaSpawner replaces MWeapBloodscourge {}

class MaulerNail : Nail
{
	Default
	{
		Obituary "$OB_MPMAULER";
		SeeSound "";
	}
}

class MicroNail : Nail
{
	Default
	{
		Damage 2;
		Scale 0.5;
		SeeSound "";
		Obituary "$OB_MPMAULER";
		MissileType "MicroNailTrail";
	}
}

class MicroNailTrail : NailTrail
{ 
	Default
	{
		Scale 0.33;
	}
}

class MaulerPowBomb : FastProjectile
{
	int trailCounter;

	Default
	{
		Radius 4;
		Height 8;
		Speed 40;
		Damage 5;
		Projectile;
		+FORCERADIUSDMG;
		+BLOODSPLATTER;
		Scale 0.75;
		Obituary "$OB_MPMAULERPOW";
		Decal "PlasmaScorchLower";
		DamageType "Explosive";
	}
	States
	{
	Spawn:
		MPOW A 1 NoDelay X_MaulerPowTrail();
		Loop;
	Death:
		MPOW B 3 Bright X_MaulerPowHit();
		MPOW C 3 Bright X_MaulerPowExplode();
		MPOW DEF 3 Bright;
		Stop;
	}

	override void PostBeginPlay()
	{
		self.trailCounter = random(0, 3);
	}

	void X_MaulerPowTrail()
	{
		Actor a;
		bool success;
		[success, a] = A_SpawnItemEx("MaulerPowTrail", 0, 0, 0, 0, -1, 0, SXF_CLIENTSIDE);
		let trail = MaulerPowTrail(a);
		if(trail) {
			int spriteindex = GetSpriteIndex("MPT" .. (trailCounter+1));
			if(spriteindex != -1) {
				trail.sprite = spriteindex;
			}
		}
		trailCounter += 1;
		trailCounter = (trailCounter < 4) ? trailCounter : 0;
	}

	void X_MaulerPowHit()
	{
		A_SetTranslucent(1.0, 1);
		A_PlaySound("weapons/maulerpowhit");
	}

	void X_MaulerPowExplode()
	{
		A_Explode(10, 32, 0, 0, 32);
	}
}

class MaulerPowTrail : EriTrail
{ 
	Default
	{
		Alpha 0.75;
		Scale 0.75;
		RenderStyle "Add";
	}
	States
	{
	Spawn:
		MPT1 IABCDE 1 Bright;
		Stop;
	Reserve:
		MPT2 A 0;
		MPT3 A 0;
		MPT4 A 0;
		Stop;
	}
}
